[{"title":"mingqixing","date":"2018-04-11T12:27:38.000Z","path":"2018/04/11/mingqixing/","text":"","tags":[]},{"title":"无线密码攻击","date":"2017-12-11T12:38:09.000Z","path":"2017/12/11/wirelessattack/","text":"前言当今时代，几乎每个人都离不开网络。随着网络的普及，无线网络逐渐扎根于人们的生活之中。然而，很多情况下，这些无线信号都需要身份验证后才能使用。现在我要讲的就是破解这道身份验证，连接上内网。当然这不仅仅是可以上网了，做其他事情也更加方便。以下操作实验使用的都是自家无线路由器，使用的主要工具是Aircrack-ng。(Aircrack-ng是无线渗透测试的经典工具，它是一款基于破解无线802.11协议的WEP以及WPA-PSK加密的工具。) WEP加密的无线网络简介Wired equivalent privacy（WEP）协议是对在两台设备间无线传输的数据进行加密的方式，用来防止非法用户窃听或者侵入无线网络。不过密码分析学家已经找出WEP的好几个弱点，因此2003年被WI-FI protected access（WPA）淘汰，又在2004年由完整的IEEE 802.11i标准（WPA2）所取代。不过，现在很多路由器基本都自带这种加密方式，仍然有相当多小白可能选择了这种加密方式。目前情况下： WEP的破解为利用加密体制缺陷，通过收集足够的数据包，使用分析加密算法还原出密码。 步骤下面我以自家用路由器进行示例。 WEP 启动KALI终端，输入airmon-ng命令查看当前系统中的无线网路接口： airmon-ng 从输出的信息可以看出，当前系统存在一个无线网络接口。从输出结果的Interface列，可以知道当前系统的无线接口为wlan0。 开启监听模式:airmon-ng start wlan0 airmon-ng start 输出信息显示监听模式被启用，映射端口为wlan0mon。 3.使用airodum-ng wlan0mon命令定位附近所有可用的无线网络。 scan 以上输出信息显示了附近所有可用的无线网络。从输出信息可以看到很多参数： BSSID:无线的mac地址、PWR：网卡报告的信号水平（这个值越小信号越好）Beacons：无线发出的通告编号CH：AP使用的信道（从Beacons中获取）MB：无线所支持的最大速率ENC：加密方式 4.使用airodump-ng捕获指定BSSID的文件。常用命令： -c 指定选择的频道-w 指定一个文件名，用于保存捕获的数据–bssid 指定攻击的Bssid 下面将Bssid为EC:26:CA:C6:CB:1B的无线路由器作为攻击目标。1airodump-ng -c 10 -w catch --bssid EC:26:CA:C6:CB:1B wlan0mon airodump-ng 从输出信息可以看到Essid为TP-LINK的无线路由器的beacons和#Data一直在变化，表示有客户端与AP发生数据交换。从以上命令执行完毕后，会生成一个名为catch-01系列的文件，为了方便后面破解时候的调用，所有保存的文件按顺序编了号，于是就多了-01这样的编号，后面再执行会有-02，-03，以此类推。 5.打开一个新的终端窗口，执行aireplay命令。使用aireplay发送一些流量给无线路由器，以至于能够捕获到数据。其中，-b后接AP的mac，-h接我们自己网卡wlan0的mac地址 aireplay 输出信息就是使用ARP Requests的方式来读取ARP请求报文的过程，此时回到airodump-ng界面查看，可以看到TP-LNK的Frames栏的数字在飞速地增加，在抓取的无线数据报文达到一定数量后，就可以开始破解，若不能成功就等待数据报文继续抓取，然后多尝试几次。 6.使用Aircrack破解密码。再新建一个终端，在新终端执行aircrack-ng catch-02.cap成功得到密码。其中第一次我抓了1W+ 的DATA没有出密码，第二次等得稍微久点，抓了2W+DATA出了密码其中捕获文件用了大概半小时，破解密码仅仅用了四秒时间！ wep_catch 获得KEY found_wep_key WPA、WPA2加密的网络简介WPA全名为Wi-Fi Proteted Access，有WPA和WPA2两个标准。它是一种保护无线电脑网络安全的协议。对于启用WPA/WPA2加密的无线网络，其攻击和破解步骤及攻击时完全一样的。当使用aireplay-ng进行攻击后，同样获取到WPA握手数据包及提示；在破解时需要提供一个密码字典。 步骤这里我仍然以我家的路由器为例： WPA 查看无线网络接口 airmon-ng 启用无线网络接口监听 airmon-ng start 获取相关AP的信息airodump-ng wlan0 scan 捕获数据包，执行 1airodump-ng -c 4 -w wpa --bssid EC:26:CA:C6:CB:1B wlan0mon 常用命令： -c 指定选择的频道-w 指定一个文件名，用于保存捕获的数据–bssid 指定攻击的Bssid airodump-ng 5.新建一个终端（之前打开的终端不要关闭！），对无线路由器进行Deauth攻击（取消验证攻击，迫使已经连接的客户端断开；当客户端自动连接的时候，即可抓取握手包）：1aireplay -0 3 –a EC:26:CA:C6:C:1B –c EC:9B:F3:E0:27:8F wlan0mon -0 ：指定为取消验证攻击 ，3 为攻击次数为3-a ：指定AP的mac地址-c ：指定连接AP的客户端的mac地址 aireplay 执行完后可以看到airodump终端的右上角抓到了握手包: handshake 抓到握手包后，使用aircrack-ng进行暴力破解。执行命令：aircrack-ng -w pass.txt wpa-01.cap，接下来就是无尽的跑字典过程了。 获得KEY dic_passwd 这里我使用的是8位纯数字字典，其大小约858M。Airacrack跑字典的速度取决于你的电脑的配置，找出密码的速度则取决于字典的质量还有运气了。 WPS(Wi-Fi Protect Setup)简介WPS是由WIFI联盟推出的全新WIFI安全防护设定标准。该标准主要是为了解决无线网络加密认证过于繁杂的弊病。因为很多用户觉得设置步骤太麻烦，不做任何安全设定。所以很多人使用wps设置无线设备，可以通过个人识别码(PIN)或按钮（PBC）取代输入一个很长的密码。路由器开启wps功能后，会随机生成一个8位的pin码，通过暴力枚举pin码，达到破解的目的。pin码是由8位纯数字组成的识别码，pin码破解是分三部分进行的，规律是这样的：pin码分为三部分，如图： pin_part 前4位为第一部分，第5-7位为第二部分，最后1位为第三部分。第一部分的验证跟第二部分没关联，最后1位是根据第二部分计算得出的校验码。破解一开始是先单独对第一部分进行pin码匹配，也就是说先破解前4位pin码。前4位是0000-9999总共10000个组合。当前4位pin码确定后再对第二部分进行pin码匹配，也就是再对5-7位进行破解，5-7位是000-999总共1000个组合。当前7位都确定后，最后1位也会自动得出，至此即可得出密码。根据pin码破解的原理，可以看到只需要枚举11000种情况就会必然破解出pin码，从而通过pin得到wifi密码。 步骤由于我家的路由器没有这个功能，找到我姑姑家的老式TP-LINK： tp-link 打开终端执行airmon-ng检测网卡 airmon-ng 开启监听模式 airmon-ng start 扫描开启WPS的设备，LCK为NO的都可以爆破试试 wps_on 使用Reaver爆破reaver 命令： 1reaver -i mon0 -b mac -S -v reaver命令参数: -i 监听后接口名称-b 目标mac地址-S 使用最小的DH key（可以提高爆破速度）-vv 显示更多的非严重警告-d 即delay每穷举一次的闲置时间 预设为1秒-c 指定频道可以方便找到信号，如-c 1 指定1频道 -N 不发送NACK信息（如果一直pin不动，可以尝试这个参数） 终端执行：1reaver -i wlan0mon 20:DC:E6:D1:DE:E4 -N -vv -c 8 获得KEY reaver 当Reaver暴力穷举出正确的pin码时，不管无线路由器的密码有多复杂，它都是手到擒来了。 WIFI万能钥匙简介Wifi万能钥匙的使用十分简单，而且据我的个人经历，小区范围内私人使用的无线网络基本可以使用WIFI万能钥匙解开。要得到WIFI的密码，，只需要三步即可到位。 步骤 打开wifi万能钥匙，可以看到有钥匙图标的热点可以直接解开： wifi_master 解开密码，连接上WIFI后，打开RE管理器（安卓手机下的文件管理器），进入如下路径（需要root权限）：/data/misc/ RE 打开wpa_supplicant.conf可以看到刚刚连接的WIFI的密码： cat_passwd 总结以上，是我平时取得wifi密码的常用方法。基本思路是：先看万能钥匙能否解开，这个方式最简便然后再看加密方式，WEP加密参考0x02，若是WPA加密再看AP是否开启WPS,参考0x04，否则只能跑字典，参考0x03。","tags":[]},{"title":"VMware的三种网络模式","date":"2017-11-12T09:59:46.000Z","path":"2017/11/12/vmware-3-mode/","text":"前言新来的学弟学妹们没有相关的计算机网络概念，在VMware安装好后，遇到没有网络的情况经常不知道怎么办。一般虚拟机安装好之后，会自动添加两张网卡(VMnet1和VMnet8),VMnet1是用户通过Host-only的网络连接，VMnet8是通过NAT方式的网络连接 Bridged 桥接模式特点虚拟机和主机是处于同等地位的机器，所以网络功能也无异于主机。并且和主机处于同一网段。 原理桥接模式，使用的是VMnet0虚拟网卡。vmnet0实际上就是一个虚拟的网桥(2层交换机)，这个网桥有若干个接口，一个端口用于连接你的Host主机，其余端口可以用于连接虚拟机，他们的位置是对等的，谁也不是谁的网关。所以桥接模式下，虚拟机和Host主机是同等地位的主机。 vmnet0 示例图主机A上的两个虚拟机1和虚拟机2，和主机A、B同处于一个网段，能够相互通信 vmnet0_1 这个模式在一般局域网常用到，但是在寝室园区使用桥接的话，由于需要认证才能上网，所以不能用这种方式 Host-only模式特点只能和主机相互通信，不能上网，也不能访问其他主机，用于建立与外部隔离的网络环境 原理Host-only模式使用的是VMnet1网卡。这种方式下，虚拟机连接到VMnet1上，但系统并不为其提供任何路由服务，因此虚拟机只能和宿主机进行通信，而不能连接到真正的网络上。 示例图虚拟机1和2之间可以相互通信，主机A能和虚拟机1和2通信，虚拟机1和2不能和主机通信(需要设置)，虚拟机不能和B主机以及外网通信 vmnet1 这个模式不常用，因为它连接不到网络，但是它是nat的基础 NAT模式特点 主机ping不通虚拟机(包括宿主) 同一宿主的虚拟机可以相互ping通 宿主能够联网，虚拟机也能联网(其他主机)。宿主没有联网，虚拟机也不能联网 虚拟机能够ping通主机,其他主机不能访问虚拟机 原理网络地址转换类似于家庭路由器的方式工作。使用NAT模式，就是让虚拟系统借助NAT（网路地址转换）功能，通过宿主机器所在的网络来访问公网。其实就是虚拟机的网卡连接到宿主的VMnet8虚拟机交换机上，VMnet8充当了路由器的作用，负责将虚拟机转发到VMnet8的包进行地址转换之后发送到实际的网络中，再降实际网络上返回的包进行地址转换后通过VMnet8发送给虚拟机。其实相比Host-only模式只不过增加一层路由功能。 示例图主机A和虚拟机1和2能相互通信，虚拟机1和2能访问主机B和外网，主机B不能访问虚拟机1和2，虚拟机1和2能相互通信 vmnet8 vmnet8_1 一般在学校的环境下（连接因特网需要锐捷认证），这种模式使得虚拟机能够快捷地连接到因特网。","tags":[]},{"title":"Burp Suite模块之Lntruder暴力破解网页登陆","date":"2017-10-21T04:36:18.000Z","path":"2017/10/21/burp/","text":"发现本学期升级的校园网，网页登陆验证很是简陋，不需要验证码，明文传输 HUNAU Auth_Info 而我们知道，新的网络，密码都是由身份证后6位组成，可以使用之前Crunch生成的对应字典，这里以我自己的账号作为测试。 配置环境 BurpSet FirefoxSet 抓包在跳转的登陆界面 http://10.100.0.12:9090/zportal/loginForWeb?wlanuserip=37c61a32243725e8412223107e8670d4&amp;wlanacname=00aab905808bf54238202dd3074e226b&amp;ssid=99f34848c4e3872f&amp;nasip=3a55a6e233ce66a3e3c9d19c2572b2ea&amp;snmpagentip=&amp;mac=e2483bb22f79a96b0b178e83ca255d91&amp;t=wireless-v2&amp;url=63651eaa103df95e80e6576b018a1055&amp;apmac=&amp;nasid=00aab905808bf54238202dd3074e226b&amp;vid=6ff7431ed4e21b22&amp;port=e2bcde16e9a8b04a&amp;nasportid=a25b45948c15af40d095454b31cfa807fcfd7ec39a63f462933adb33ce566a2a中抓取到： CatchInfo 使用选中一下黄色标记的字符，右键Send to lntruder： Burp_case1 可以看到Lntruder对应的选项卡变为高亮，点击Lntruder选项卡: Burp_case2 点击进入Positions选项卡，看到下方有15个payload，我们不需要这些，点击Clear，然后下方编程0payload： Burp_case3 翻下去找到我们需要的变量，选中“12121”点击右侧Add，可以看到下方显示1payload： Burp_case4 点击payload选项卡，payload type我选择跑字典： Burp_case5 接着option选项卡里，修改线程为10,可以根据实际网络情况加大。有些网站可能会有保护措施，重复登录多次后会封IP，但明显这个认证界面没有这个保护 Burp_case6 最后点击最上方的选项卡lntruder的start attck： Burp_case7 接下来就是跑字典的过程了，我自定义的身份证后6位密码有310000组: Burp_case8 睡一个午睡后，点击length排序（登陆密码错误时和登陆成功后的response包不同，length必然有差别）注意到response里结果为成功，找到密码为“297410”： Burp_Success 当然，”Intruder”只是Burpsuite其中的一个模块，它的功能和用处远远不止这些。以上测试是基于我的个人账号，切勿用于不当用途。","tags":[]},{"title":"密码生成工具Crunch的使用","date":"2017-10-07T05:05:17.000Z","path":"2017/10/07/crunch/","text":"很多时候网络上下载的、系统或软件自带的字典效果不尽如人意，这个时候我们可能就需要根据自己的需求生成一个按照我们已经知道的信息来组合的字典。 介绍Crunch是一种创建密码字典工具，该字典常用来暴力破解。使用Crunch工具生成的密码可以发送到终端、文件或者另一个程序。Crunch默认安装在kali环境中，Crunch可以按照指定的规则生成密码字典，生成的字典字符序列可以输出到屏幕、文件或重定向到另一个程序中，Crunch可以参数可能的组合和排列，其最新版本为3.6。并具备如下特征： Crunch可以以组合和排列的方式生成字典 它可以通过行数或文件大小中止输出 支持恢复 支持数字和符号模式 分别支持大小写字符模式 在生成多个文件时添加状态报告 新的-l选项支持@，%^ 新的-d选项可以限制重复的字符，可以通过man文件查看详细信息 现在支持unicode Crunch其实最厉害的是知道密码的一部分细节后，可以针对性的生成字典，这在渗透中就特别有用。 使用现在的KALI中一般自带Crunch。在终端下输入Crunch，执行以上命令后，将输出如下所示的信息： Crunch_info 输出的信息显示了Crunch命令版本及语法格式：1$ Crunch &lt;min&gt; &lt;max&gt; [options] 常用选项(1) -b 数字[类型] 指定输出文件的大小，仅仅使用“-o”选项时生效;例如60mb，例如格式： “Crunch 4 5 -b 20mib -o START”会生成4个文件：aaaa-gvfed.txt，gvfee-ombqy.txt，ombqz-wcydt.txt，wcydu-zzzzz.txt，其中每一个文件的开始和最后字符串将作为文件的文件命名;类型有效值为KB、MB、GB、KIB，MIB，和GIB。前三种类型是基于1000，而最后三种类型是基于1024，注意数字与类型之间没有空格。例如“500mb”正确，而“500 MB”则不正确，执行命令后如图所示。aaaa-gvfed.txt，gvfee-ombqy.txt，ombqz-wcydt.txt大小将是20M，以1024为基数，也即20480kb，一般以mib为参数。 Crunch_option1 (2) -c 数字 指定写入输出文件的行数，也即包含密码的个数（行数），例如使用字符规则mixalpha-numeric-all-space，生成最小和最大字符串为1的且每一个文件保存60个字符串的密码字典： Crunch_option2 Crunch_option22 (3) -d 数字符号，限制出现相同元素的个数(至少出现元素个数)，“-d 2@”限制小写字母输出像aab和aac，aaa不会产生，因为这是连续3个字母，格式是数字+符号，数字是连续字母出现的次数，符号是限制字符串的字符，例如@,%^(“@”代表小写字母，“,”代表大写字符，“%”代表数字，“^”代表特殊字符)(4) -e 字符串，定义停止生成密码，比如-e 222222：到222222停止生成密码: Crunch_option4 (5) -f /path/to/charset.lst charset-name，从charset.lst指定字符集，也即调用密码库文件，比如kali中的charset.lst 在/usr/share/Crunch/charset.lst，则参数为“-f /usr/share/Crunch/charset.lst”(6) -o wordlist.txt，指定输出文件的名称，例如wordlist.txt(7) -p 字符串 或者-p 单词1 单词2 …以排列组合的方式来生成字典。 Crunch_option7 (8) -q filename.txt，读取filename.txt(9) -s 指定一个开始的字符。(10) -t @,%^，指定模式，@,%^分别代表意义如下： @ 插入小写字母 , 插入大写字母 % 插入数字 ^ 插入特殊符号 (11) z gzip, bzip2, lzma, and 7z，从-o选项压缩输出结果，支持gzip, bzip2, lzma, and 7z格式，gzip是最快压缩率最低，bzip2是稍微慢于gzip，但比其压缩率搞，7z最慢，但压缩率最高。 实例生成单词的所有组合1$ Crunch 9 9 -p wang 1997 0101 制作8位密码字典1$ Crunch 8 8 charset.lst numeric -o num8.dic 制作139开头的手机字典可以每次生成文件大小为20M，自动生成文件：1$ Crunch 11 11 +0123456789 -t 139%%%%%%%% -b 20mib -o START Crunch_case1 另外，KAILI还自带了一些字典在/usr/share/wordlists/文件夹下，例如rockyou.txt.gz字典，将字典解压后其实就是一个rockyou.txt文件，里边包含了WPA的常用密码. 搭配工具校园网登陆认证默认使用身份证后6位作为密码 HUNAU 可以使用Crunch方便地生成需要的字典 IDpasswd 考虑到还有以X结尾的号码: IDpasswdX 然后可以使用Burpsuite…Crunch只是一个生成字典的工具，理论上支持搭配所有暴力破解的工具，比如跑抓到的WIFI握手包，压缩包密码等，以后它将是我如影随形的伙伴了！Crunch Me!","tags":[]},{"title":"被玩坏的校园网","date":"2017-09-27T09:21:42.000Z","path":"2017/09/27/wang/","text":"校园网的升级随着时代的发展，学校也紧跟潮流在今年升(zhang)级(jia)了校园网。之前校园网是纯有线锐捷客户端认证，现在校园网将电信联通合并，加上无线网络覆盖全校，实在是皆大欢喜，可喜可贺，可喜可贺啊！ 有线认证方式使用了多年的有线网络，通过锐捷客户端认证，原来￥80一学期还不限速的网络一去不复返咯。 Ruijie 无线认证方式第一种方式是连接“HUNAU”，连接后无网络访问权限，通过网页认证，使用未购买套餐的账号登陆可以直接连接上并可以上学校内网。 Wireless1 HUNAU 第二种方式是连接“HUNAU-Auto”，热点自带的认证登陆，使用未购买套餐的账号连接也可以上内网 Wireless2 当然，身为穷逼的我，肯定是续费了￥80一学期的纯有线网络(如今限速)，看着高带宽和无线网络的价格实在消瘦不起。 已知的方式目前我知道的绕过学校认证和限速的方法有以下几种： 1.DNS隧道2.内网VPN3.我瞎折腾的方法 这里记录一下三种方式的部署和使用，以下纯属实验，只是为了更深入地理解计算机网络相关知识啦~！仅供参考，切勿用于不当目的！ DNS隧道简介在连接到某个需要 Web 认证的热点之前，我们已经获得了一个内网 IP，此时，如果我们访问某个 HTTP 网站，网关会对这个 HTTP 响应报文劫持并篡改，302 重定向给我们一个 Web 认证界面（所以点 HTTPS 的网站是不可能跳转到 web 认证页面的）。详细原理我们看到了，网关（或者说交换机）都默认放行 DHCP 和 DNS 报文，也就是 UDP53 与 UDP 67。有些网关甚至不会报文进行检查，这也就意味着任何形式的数据包都可以顺畅通过。既然如此，我们就可以在公网搞一台服务器，然后借此来免费上网，顺便还能防止网络审计(其实只是把钱花在服务器上了)。我们这次免费上网的主要突破点就是 UDP 53，当然了，据一位朋友实践，UDP 67、68也可以绕过 Web 认证。 环境监测在部署之前有必要进行一下环境监测，以免造成因为环境不允许而做的一大堆无用功。打开 cmd（GNU/Linux的终端），输入如下内容1nslookup www.baidu.com 或者使用脚本测试下,这里参照了博主”土豆不好吃”的文章。click me若测试环境允许，可以进行下一步的搭建服务 服务搭建这里也有很详尽的教程，参照CSDN博主”玖洲维城网络科技”的文章。click me按照文章所述在服务器安装好Softether，在我的电脑安装上Openvpn并连接就能直接畅游网络了。 使用心得以上，可以绕过认证直接连接到因特网，但由于我使用的是国内的学生服务器，所以受到带宽的限制… 下载地址Softethrer Server64位版本: 链接: https://pan.baidu.com/s/1vNvIJscFLQj42XZ_Rnk6Rg 密码: xgjcSoftethrer Server树莓派ARM32位版本: 链接:https://pan.baidu.com/s/1c2GWopy 密码:fv4bSoftether的WINDOWS管理端：链接: https://pan.baidu.com/s/1bUrtKi 密码: y8s1Softether的WINDOWS客户端：链接: https://pan.baidu.com/s/1c24fbLA 密码: fddrOPVEN_GUI客户端：链接:https://pan.baidu.com/s/1nvkPPfN 密码:fc55 内网VPN简介前面说到，最新的校园网套餐实行了分档次的套餐，不同档次不同速率，这里的不同速率是指访问外网的速率，内网的访问速率是没有限制的。这时，在已经认证成功的前提下，获得了网络访问权限，但此时访问外网的速率是受限制的。那么我在学校内网有一台能够上网的机器，利用点对点连接，把它当做跳板不就行了？ Vpn_inschool 服务搭建恰好我在实验室有这样的资源，一台IP地址为”10.x.x.x”的服务器(其实买个树莓派插在实验室也一样)。按照上述服务搭建的步骤在这台服务器上安装Softether，然后在我的电脑上使用Openvpn的配置文件直接连接,搞定！ 使用心得以上，在登陆认证获得内网访问权限后，通过Openvpn连接到我的内网服务器，没有受到任何限速！ 瞎折腾简介这种方式完全是我瞎折腾出来的，原理猜测是无线认证和有线认证是分开的两台服务器，但两者是有同步消息的。在我的电脑，两个客户端(无线认证和有线认证)同时认证卡住两台服务器同步消息的时间，使两台服务器消息矛盾，绕开了他们的限制。 操作步骤 将有线网卡禁用，通过无线认证第一种方式连接HUNAU，打开浏览器自动跳出登陆网页，这是无线认证服务器的认证端网页，先保留着，URL如下，其中有mac、userip等参数：http://10.100.0.12:9090/zportal/loginForWeb?wlanuserip=37c61a32243725e8412223107e8670d4&amp;wlanacname=00aab905808bf54238202dd3074e226b&amp;ssid=99f34848c4e3872f&amp;nasip=3a55a6e233ce66a3e3c9d19c2572b2ea&amp;snmpagentip=&amp;mac=e2483bb22f79a96b0b178e83ca255d91&amp;t=wireless-v2&amp;url=1cd4c9d683b191233d7be2539eb794196a2a58b150f012b910b74a2fde544bac1f10cdd1bb45c9aeec992c5a1746e8ea6ea1b480e0d713af4a1725a95600c0b3&amp;apmac=&amp;nasid=00aab905808bf54238202dd3074e226b&amp;vid=6ff7431ed4e21b22&amp;port=e2bcde16e9a8b04a&amp;nasportid=a25b45948c15af40d095454b31cfa807fcfd7ec39a63f462933adb33ce566a2a 将无线网卡禁用，打开有线网卡，打开有线认证方式的锐捷客户端。 回到浏览器的网页上，打开记住密码和自动登陆： Login_page 最重要的一步！锐捷认证客户端点连接，网页认证点登陆，手要快！确保几乎在同时认证。 然后可以看到两者同时登陆上。若如平时正常登陆有线锐捷客户端，然后再登陆这个网页认证端，其中必有一个被挤下线，也不能访问因特网。 Login_success Auth_success 使用心得网速测试是20M带宽，这种方式好像同时绕过了限速，看到室友2M、4M蛋疼的小水管，躲在角落偷偷笑。使用发现，通过这种方式连接的网络十来分钟后会断掉，之后不能解析地址，不能ping通8.8.8.8，QQ不能发送和接收消息，但是奇怪的是正在观看的直播不会断。有待进一步探究…","tags":[]},{"title":"这是我在Hexo的第一篇文章！Hexo+Gitpage搭建日记","date":"2017-09-07T05:05:17.000Z","path":"2017/09/07/hello-world-1/","text":"部署操作还是挺简单的，具体参照: click here重复的轮子就不造了,感谢原作者”Yu丶”的详尽教程 踩过的坑这其中必须得提一下部署过程中踩过的坑，纠结了很久。。前面的搭建环境都没有问题，到最后上传部署到gitpage时，运行hexo d没有任何提示。就像这样: error 就是这个东西！deploy选项下面，在配置项的前面必须有两个空格，冒号后面必须有一个空格！ space 所以说，格式非常重要，必须一丝不苟地对待…还有注意本地部署三部曲和部署三部曲：123$ hexo clean$ hexo g$ hexo s --debug(hexo d) 主题在Github上搜索了相关的主题，发现Indigo这个样式挺合我意的。果断使用它了！click here感谢”yscoder”大神的无私奉献，让我这样的小白也能用上漂亮的主题！根据以上文档进行自定义修改： 站点配置123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Sevge&apos;s Blogsubtitle: description: My Blogauthor: Sevgelanguage: zh-CNtimezone:# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: https://sevge.github.io/about/root: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: # Home page setting# path: Root path for your blogs index page. (default = &apos;&apos;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: &apos;&apos; per_page: 10 order_by: -date # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 7pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: indigofeed: type: atom path: atom.xml limit: 0jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:Sevge/sevge.github.io.git branch: master 主题配置123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163# hexo-theme-indigo# https://github.com/yscoder/hexo-theme-indigo# 添加新菜单项遵循以下规则# menu:# link: fontawesome图标，省略前缀，本主题前缀为 icon-，必须# text: About 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写# url: /about 链接，绝对或相对路径，必须。# target: _blank 是否跳出，省略则在当前页面打开menu: home: text: 主页 url: / archives: text: 归档 url: /archives# tags:# text: 标签# url: /tags th-list: text: 分类 url: /categories github: url: https://github.com/sevge target: _blank link: text: 关于 url: /about# 你的头像urlavatar: /img/avatar.jpg# avatar linkavatar_link: /# 头像背景图brand: /img/brand.jpg# faviconfavicon: /favicon.ico# emailemail: sevge6582@gmail.com# 设置 Android L Chrome 浏览器状态栏颜色color: &apos;#3F51B5&apos;# 页面标题tags_title: Tagsarchives_title: Archivescategories_title: Categories# 文章截断excerpt_render: falseexcerpt_length: 200excerpt_link: 阅读全文...mathjax: falsearchive_yearly: true# 是否显示文章最后更新时间show_last_updated: false# 是否开启分享share: true# 是否开启打赏，关闭 reward: falsereward: false# title: 谢谢大爷~# wechat: /img/wechat.jpg #微信，关闭设为 false# alipay: /img/alipay.jpg #支付宝，关闭设为 false# 是否开启搜索search: true# 是否大屏幕下文章页隐藏导航hideMenu: true# 是否开启toc# toc: falsetoc: list_number: true # 是否显示数字排序# 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.iopostMessage: #这里可以写作者留言，标签和 hexo 中所有变量及辅助函数等均可调用，示例：&lt;a href=&quot;&lt;%- url_for(page.path).replace(/index\\.html$/, &apos;&apos;) %&gt;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;%- page.permalink.replace(/index\\.html$/, &apos;&apos;) %&gt;&lt;/a&gt;# 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447cnzz: false# 百度统计，如要开启，改为你的 keybaidu_tongji: false# 腾讯分析，如要开启，输入站点idtajs: false# googlegoogle_analytics: falsegoogle_site_verification: false# lessless: compress: true paths: - source/css/style.less# 以下评论插件开启一个即可# 是否开启 disqusdisqus_shortname: false# 是否开启友言评论, 填写友言用户iduyan_uid: false# 是否使用 gitment，https://github.com/imsun/gitmentgitment: false# gitment:# owner:# repo:# client_id:# client_secret:# Valine Comment system. https://valine.js.orgvaline: enable: false # 如果你想使用valine，请将值设置为 true appId: # your leancloud appId appKey: # your leancloud appKey notify: false # Mail notify verify: false # Verify code avatar: mm # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide placeholder: Just go go # Comment Box placeholder guest_info: nick,mail,link # Comment header info pageSize: 10 # comment list page size# 是否开启Hyper Comments，填写id则启用，false则禁用。http://hypercomments.com# Hyper Comments support. Write your id here, or false to disablehyper_id: false# 规范网址# 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径# https://support.google.com/webmasters/answer/139066# 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.netcanonical: false# 版权起始年份since_year: 2017# 用户页面中作者相关的描述性文字，如不需要设为 falseabout: 只是一只奔跑的柯基啦(&gt; ~ &lt;)# “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/visit_counter: false# site_uv: 站点总访客数：# site_pv: 站点总访问量：# 动态定义titletitle_change: normal: (つェ⊂)咦!又好了! leave: 死鬼去哪里了！# 设置为 true 发布后将使用 unpkg cdn 最新的主题样式# 如果想让你的自定义样式生效，把此项设为 falsecdn: false# 设置为 true 将使用 lightbox render 图片lightbox: true# icp备案号 ICP_license: 京ICP备1234556号-1ICP_license: false 主题配色由于个人喜欢低调的灰色，参照Material Design Color Palette Generator将站点默认的靛蓝修改成灰色：编辑theme/indigo/source/css/_partial/variable.less,更改对应的颜色变量1234567891011@darkPrimaryColor: #616161;@primaryColor: #9e9e9e;@lightPrimaryColor: #f5f5f5;@textPrimaryColor: #212121;@accentColor: #536dfe;@primaryTextColor: #212121;@secondaryTextColor: #757575;@dividerColor: #bdbdbd;@borderColor: #dadada;@backColor: #f6f6f6;@codeBg: #f5f5f5; 总结不管怎么说，作为菜鸟的我也开始了写博客的旅程。今后还请多多指教了！","tags":[]}]